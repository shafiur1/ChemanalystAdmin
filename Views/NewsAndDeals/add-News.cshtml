    
@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~\ckeditor/ckeditor.js" type="text/javascript"></script>
@model ChemAnalyst.Models.SA_NewsViewModel
<div class="update-profile-wrapper">

    <h3><a href="@Url.Action( "News","NewsAndDeals" )"><i class="fa fa-list"></i> News List</a></h3>
    <div class="pull-right">@Html.Partial("~/Views/PartialView/ImageUpload.cshtml")</div>

    <div class="white-wrapper">

        <div class="col-md-6 col-lg-7 col-md-offset-2">

            <div class="eq-form">


                <div class="change">
                    @{
                        if (string.IsNullOrEmpty(Model.NewsImg))
                        {
                            <img src="~/images/news-report.png" title="@Model.NewsImg" alt="@Model.NewsImg" style="width:95px; height:95px" />
                        }
                        else
                        {
                            <img src="~/ProductImages/@Model.NewsImg" title="@Model.NewsImg" alt="@Model.NewsImg" style="width:95px; height:95px" />
                        }
                    }
                    <p>Add New News</p>
                </div>

                <div class="eq-form-box">
                    @using (Html.BeginForm("SaveNews", "NewsAndDeals", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "myForm" }))
                    {

                        @Html.AntiForgeryToken()
                        <div style="visibility:hidden">
                            @Html.TextBoxFor(model => model.id, new { @class = "form-control", @placeholder = "Title" })
                        </div>
                        <div class="col-md-4 col-lg-12 form-group">
                            @Html.TextBoxFor(model => model.NewsName, new { @class = "form-control", @placeholder = "Title", @required = "required" })


                            @*<input type="text" value="" size="40" class="form-control" placeholder="Title">*@
                        </div>



                        <div class="col-md-4 col-lg-12 form-group">
                            @*<textarea rows="10" class="form-control" placeholder="Description"></textarea>*@
                            <label>News Description</label>
                            @Html.TextAreaFor(model => model.NewsDiscription, new { @class = "form-control", @rows = 4, @placeholder = "Description * ", id = "Desc" })


                        </div>
                        <script>

                            CKEDITOR.replace("Desc");


/**/</script>
                        @*<div class="col-sm-4 col-lg-12 form-group">

                                @Html.DropDownListFor(m => m.Product, Model.ProductList, "Select Product", new { @class = "form-control", required = "required" })


                            </div>*@
                        <div class="col-sm-6 col-lg-12 form-group">

                            <div class="custom-select-option">
                                <div class="multiselect">
                                    <div id="dropdown1" class="selectbox" onclick="showCheckBoxes()">

                                        <select class="form-control">
                                            <option>Select product</option>
                                        </select>
                                        <div class="overSelect"></div>
                                    </div>
                                    <div id="checkboxes" style="display:none; width:200px;">
                                        @{

                                            string ss = "";
                                            foreach (var item in Model.ProductList)
                                            {
                                                <label style="width:100%;" id="@item.Value">
                                                    <input @(((List<ChemAnalyst.Models.SA_NewsAndProductRelation>)ViewBag.NewsProducts).Where(x => x.SA_ProductId == Convert.ToInt16(item.Value)).Count() > 0 ? "checked='checked'" : "") name="productList" onchange="selectProduct(this);"
                                                           type="checkbox" id="@item.Value" />@item.Text
                                                    </label>


                                                    if (((List<ChemAnalyst.Models.SA_NewsAndProductRelation>)ViewBag.NewsProducts).Where(x => x.SA_ProductId == Convert.ToInt16(item.Value)).Count() > 0)
                                                    {
                                                        ss = ss + "," + ((List<ChemAnalyst.Models.SA_NewsAndProductRelation>)ViewBag.NewsProducts).FirstOrDefault(x => x.SA_ProductId == Convert.ToInt16(item.Value)).SA_ProductId;
                                                    }
                                                }


                                        }
                                    </div>
                                    <input type="hidden" name="allProduct" id="allProduct" value="@ss" />
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4 col-lg-12 form-group">
                            @*<textarea rows="4" class="form-control" placeholder="Meta Title"></textarea>*@
                            @Html.TextBoxFor(model => model.URL, new { @class = "form-control", @placeholder = "Custom URL", @required = "required" })


                        </div>
                        <div class="col-md-4 col-lg-12 form-group">
                            @*<textarea rows="4" class="form-control" placeholder="Meta Title"></textarea>*@
                            @Html.TextBoxFor(model => model.Keywords, new { @class = "form-control", @placeholder = "Meta Keywords" })


                        </div>
                        <div class="col-md-4 col-lg-12 form-group">
                            @*<textarea rows="4" class="form-control" placeholder="Meta Description"></textarea>*@
                            @Html.TextAreaFor(model => model.MetaTitle, new { @class = "form-control", @rows = 4, @placeholder = "Meta Title " })


                        </div>
                        <div class="col-md-4 col-lg-12 form-group">
                            @*<textarea rows="4" class="form-control" placeholder="Meta Description"></textarea>*@
                            @Html.TextAreaFor(model => model.MetaDiscription, new { @class = "form-control", @rows = 4, @placeholder = "Meta Description " })


                        </div>

                        <div class="col-md-4 col-lg-12 form-group">
                            @Html.TextBoxFor(model => model.CreatedTime, new { @class = "form-control", @rows = 4, @placeholder = "News date ", @required = "required" })


                        </div>




                        @*<div class="col-sm-6 col-lg-12">
                                <div class="form-group">

                                    @Html.DropDownListFor(m => m.Product, Model.ProductList, "Select Product", new { @class = "form-control" })


                            </div>*@

                        <div class="col-sm-6 col-lg-12">
                            <div class="form-group">
                                <input type="file" name="file" class="form-control" />


                            </div>
                        </div>

                        <div class="btn-wrapper">

                            <a class="gray-btn" href="@Url.Action("NewsAndDeals","News")">Cancel</a>
                            <input type="submit" class="btn blue-btn" value="Save">

                        </div>

                    }

                </div>


            </div>

        </div>
    </div>

</div>

@section Scripts
{
<script defer src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.0/sweetalert.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/css/jquery.datetimepicker.css"/ >

<script src="~/js/jquery.datetimepicker.full.min.js"></script>

<script type="text/javascript">

    $(function () {
        jQuery('#CreatedTime').datetimepicker();

    });
   // $("#CreatedTime").datepicker({ dateFormat: "yy/mm/dd" }).datepicker("setDate", new Date());

    $(function () {
        $('#Desc').ckeditor({
            toolbar: 'Full',
            enterMode: CKEDITOR.ENTER_BR,
            shiftEnterMode: CKEDITOR.ENTER_P
        });


    });
    var productList = [];
    function showCheckBoxes() {
        $("#checkboxes").toggle();
    }

    function selectProduct(obj) {
        if ($(obj).prop('checked') == true) {
            productList.push(obj.id);
            $("#allProduct").val($("#allProduct").val() + "," + obj.id);
        } else {

            $("#allProduct").val($("#allProduct").val().replace("," + obj.id, ""));

            var index = productList.indexOf(obj.id);
            if (index > -1) {
                productList.splice(index, 1);
            }
        }
    }

    $("#myForm").submit(function (e) {
        debugger
        var selected = [];
        $('#checkboxes input:checked').each(function () {
            debugger;
            selected.push($(this).attr('name'));
        });
        debugger
        if (selected.length == 0) {
            swal("Warning", "Please select at least one product.", "error");
            e.preventDefault();
        }
        else {
            return true;
        }
    });
</script>

<script>

$(document).on('click', '.browse', function(){
  var file = $(this).parent().parent().parent().find('.file');
  file.trigger('click');
});
$(document).on('change', '.file', function(){
  $(this).parent().find('.form-control').val($(this).val().replace(/C:\\fakepath\\/i, ''));
});



</script>


    }



